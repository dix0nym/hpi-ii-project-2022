{
    "name": "Neo4jSink",
    "config": {
        "connector.class": "streams.kafka.connect.sink.Neo4jSinkConnector",
        "errors.log.include.messages": "true",
        "neo4j.authentication.basic.password": "marina-quality-state-cosmos-jessica-4030",
        "topics": "gf-lei,gf-relationship,CEO,company",
        "neo4j.server.uri": "bolt://neo4j:7687",
        "neo4j.topic.cypher.CEO": "Merge(ceo:CEO{id: event.id}) SET ceo.firstname = event.firstname, ceo.lastname = event.lastname, ceo.birthplace = event.birthplace, ceo.birthdate = event.birthdate",
        "neo4j.topic.cypher.gf-relationship": "Merge(r:GfRelationship{id:event.id}) SET r.startNode = event.Relationship.StartNode.NodeID, r.endNode = event.Relationship.EndNode.NodeID, r.relationType = event.Relationship.RelationshipType Merge(g:GfLei{id:r.startNode}) Merge(g2:GfLei{id:r.endNode}) With r, g, g2 CALL apoc.merge.relationship(g, r.relationType, {}, {}, g2) YIELD rel return rel",
        "neo4j.topic.cypher.gf-lei": "Merge(g:GfLei{id:event.LEI}) SET g.name = event.Entity.LegalName, g.hrb_id = event.RegistrationAuthorityEntity.RegistrationAuthorityEntityID",
        "neo4j.topic.cypher.company": "Merge(c:GfLei{hrb_id:event.reference_id}) SET c.company_objective = event.company_objective",
        "name": "Neo4jSink",
        "neo4j.authentication.basic.username": "neo4j",
        "errors.tolerance": "all",
        "neo4j.encryption.enabled": "false",
        "errors.log.enable": "true"
    },
    "tasks": [
        {
            "connector": "Neo4jSink",
            "task": 0
        }
    ],
    "type": "sink"
}